name: Run version bump, if version changes publish a release.

on:
  push:
    branches:
      - trunk

jobs:
  release:
    permissions:
      contents: write
      packages: write

    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false
          token: ${{ secrets.PAT }}

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install semver
          pip install pydantic

      - name: Get current version
        run: |
          VERSION=$(python build/semver_bump.py --version)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Current version is $VERSION"

      - name: Increment version
        run: |
          python build/semver_bump.py v${{ env.VERSION }}
          NEW_VERSION=$(python build/semver_bump.py --version)
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          echo "Bumped version from ${{ env.VERSION }} to $NEW_VERSION"

      - name: Commit version bump
        run: |
          git config --global user.email "irvinjohnathan@gmail.com"
          git config --global user.name "Johnathan Irvin"
          git remote set-url origin https://x-access-token:${{ secrets.PAT }}@github.com/johnnyirvin/shell-craft.git
          git add pyproject.toml
          git commit -m "chore(version): Bump version to v${{ env.NEW_VERSION }} [skip ci]"
          git push
          echo "Committed version bump to ${{ env.NEW_VERSION }}"
        if: ${{ env.NEW_VERSION != env.VERSION }}

      - name: Generate changelog
        run: |
          CHANGELOG=$(python build/change_log.py v${{ env.VERSION }})
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "CHANGELOG<<$EOF" >> $GITHUB_ENV
          echo "$CHANGELOG" >> $GITHUB_ENV
          echo "$EOF" >> $GITHUB_ENV
        if: ${{ env.NEW_VERSION != env.VERSION }}

      - name: Create release tag
        uses: softprops/action-gh-release@v0.1.15
        with:
          tag_name: v${{ env.NEW_VERSION }}
          body: ${{ env.CHANGELOG }}
          prerelease: false
        if: ${{ env.NEW_VERSION != env.VERSION }}
        
